import unittest
from src.solution import get_k_means


class Test_1(unittest.TestCase):
    test_data_1 = {"uid_0": [-1.479359467505669, -1.895497044385029, -2.0461402601759096, -1.7109256402185178],
                   'uid_1': [-1.8284426855307128, -1.714098142408679, -0.9893682669649455, -1.5766569391907947],
                   "uid_2": [-1.8398933218386004, -1.7896757009107565, -1.1370177175666063, -1.0218512556903283],
                   "uid_3": [-1.23224975874512, -1.8447858273094768, -1.8496517744301924, -2.4720755654344186],
                   "uid_4": [-1.7714737791268318, -1.2725603446513774, -1.5512094954034525, -1.2589442628984848]}

    def test_Kmeans(self):
        self.assertEqual(get_k_means(Test_1.test_data_1, 4, 1), [
                         [-1.63, -1.703, -1.515, -1.608]])
        self.assertEqual(get_k_means(Test_1.test_data_1, 4, 2), [
                         [-1.356, -1.87, -1.948, -2.092], [-1.813, -1.592, -1.226, -1.286]])
        self.assertEqual(get_k_means(Test_1.test_data_1, 4, 3), [
                         [-1.356, -1.87, -1.948, -2.092], [-1.771, -1.273, -1.551, -1.259], [-1.834, -1.752, -1.063, -1.299]])


class Test_2(unittest.TestCase):
    test_data_2 = {"uid_0": [13.2, 236, 58, 21.2],
                   'uid_1': [8.1, 294, 80, 31.6],
                   "uid_2": [7.9, 204, 78, 38.7],
                   "uid_3": [5.3, 46, 83, 20.2],
                   "uid_4": [7.2, 113, 65, 15.8]}

    def test_Kmeans(self):
        self.assertEqual(get_k_means(Test_2.test_data_2, 4, 1), [
                         [8.34, 178.6, 72.8, 25.5]])
        self.assertEqual(get_k_means(Test_2.test_data_2, 4, 2), [
                         [9.733, 244.667, 72.0, 30.5], [6.25, 79.5, 74.0, 18.0]])
        self.assertEqual(get_k_means(Test_2.test_data_2, 4, 3), [
                         [10.65, 265.0, 69.0, 26.4], [6.25, 79.5, 74.0, 18.0], [7.9, 204.0, 78.0, 38.7]])


class Test_3(unittest.TestCase):
    test_data_3 = {"uid_0": [13.2, 1.78, 2.14, 11.2, 100, 2.65],
                   "uid_1": [14.37, 1.76, 2.5, 16.8, 113, 3.85],
                   "uid_2": [14.06, 2.15, 2.16, 17.6, 121, 2.6],
                   "uid_3": [13.75, 1.73, 2.14, 16, 89, 3.23],
                   "uid_4": [13.24, 2.59, 2.87, 21, 118, 2.8],
                   "uid_5": [13.86, 1.35, 2.27, 16, 98, 2.98]}

    def test_Kmeans(self):
        self.assertEqual(get_k_means(Test_3.test_data_3, 6, 1), [
                         [13.747, 1.893, 2.347, 16.433, 106.5, 3.018]])
        self.assertEqual(get_k_means(Test_3.test_data_3, 6, 2), [
                         [13.89, 2.167, 2.51, 18.467, 117.333, 3.083], [13.603, 1.62, 2.183, 14.4, 95.667, 2.953]])
        self.assertEqual(get_k_means(Test_3.test_data_3, 6, 3), [[13.805, 1.54, 2.205, 16.0, 93.5, 3.105], [
                         13.2, 1.78, 2.14, 11.2, 100.0, 2.65], [13.89, 2.167, 2.51, 18.467, 117.333, 3.083]])
